{
  // "compilerOptions" contains configuration settings for the TypeScript compiler.
  "compilerOptions": {
    // Specifies the ECMAScript target version for the compiled JavaScript.
    // "ES2020" means the output will be compatible with ECMAScript 2020 features.
    "target": "ES2020",
    
    // Enables the use of 'define' semantics for class fields, aligning with the ECMAScript standard.
    "useDefineForClassFields": true,
    
    // Specifies the library files to include in the compilation, providing type definitions.
    // "ES2020" includes ECMAScript 2020 features, "DOM" provides browser-related types, and "DOM.Iterable" adds support for iterable DOM collections.
    "lib": ["ES2020", "DOM", "DOM.Iterable"],
    
    // Defines the module system to be used. "ESNext" refers to the latest ECMAScript module system.
    "module": "ESNext",
    
    // Skips type checking of declaration files (*.d.ts), which can speed up compilation.
    "skipLibCheck": true,
    
    // /* Bundler mode */
    // Configures the module resolution strategy to work well with modern bundlers like Vite or Webpack.
    "moduleResolution": "bundler",
    
    // Allows importing TypeScript-specific extensions (e.g., .ts, .tsx) in your code.
    "allowImportingTsExtensions": true,
    
    // Ensures that each file is treated as a separate module, which is useful for transpilers like Babel.
    "isolatedModules": true,
    
    // Forces TypeScript to detect all files as modules, even if they lack import/export statements.
    "moduleDetection": "force",
    
    // Disables emitting compiled JavaScript files. Useful when using a bundler that handles this step.
    "noEmit": true,
    
    // Configures JSX to be transformed into React.createElement calls, enabling React development.
    "jsx": "react-jsx",
    
    // /* Linting */
    // Enables strict type-checking options, catching more potential errors during development.
    "strict": true,
    
    // Reports errors on unused local variables, helping to keep the codebase clean.
    "noUnusedLocals": true,
    
    // Reports errors on unused function parameters, encouraging better code hygiene.
    "noUnusedParameters": true,
    
    // Prevents fallthrough cases in switch statements, avoiding unintentional behavior.
    "noFallthroughCasesInSwitch": true
  },
  
  // Specifies the files or directories to include in the TypeScript project.
  // In this case, only the "src" directory is included.
  "include": ["src"]
}